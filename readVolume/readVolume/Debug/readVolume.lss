
readVolume.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000788  000007fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000788  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000802  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000860  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000008a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008c8  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000077a  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000385  00000000  00000000  00001932  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  00001cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040f  00000000  00000000  00001d78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e8  00000000  00000000  00002187  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000236f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e8       	ldi	r30, 0x88	; 136
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 b7 00 	call	0x16e	; 0x16e <main>
  8e:	0c 94 c2 03 	jmp	0x784	; 0x784 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <UART_INIT>:
#include <util/delay.h>
#include <stdio.h>

void UART_INIT(void)
{
	UCSR0A |= _BV(U2X0);		// 2배속 모드
  96:	e0 ec       	ldi	r30, 0xC0	; 192
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	82 60       	ori	r24, 0x02	; 2
  9e:	80 83       	st	Z, r24
	
	UBRR0H = 0x00;
  a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = 207;		// Baud rate(9600) 설정
  a4:	8f ec       	ldi	r24, 0xCF	; 207
  a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	
	// 비동기, 8비트 데이터, 패리티 없음, 1비트 정지 비트 모드
	UCSR0C |= 0x06;
  aa:	e2 ec       	ldi	r30, 0xC2	; 194
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	86 60       	ori	r24, 0x06	; 6
  b2:	80 83       	st	Z, r24
	UCSR0B |= _BV(RXEN0);
  b4:	e1 ec       	ldi	r30, 0xC1	; 193
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	80 61       	ori	r24, 0x10	; 16
  bc:	80 83       	st	Z, r24
	UCSR0B |= _BV(TXEN0);		// 송수신 가능
  be:	80 81       	ld	r24, Z
  c0:	88 60       	ori	r24, 0x08	; 8
  c2:	80 83       	st	Z, r24
  c4:	08 95       	ret

000000c6 <UART_transmit>:
}

void UART_transmit(unsigned char data)
{
	while( !(UCSR0A & (1<<UDRE0)) );		// 송신 가능 대기
  c6:	e0 ec       	ldi	r30, 0xC0	; 192
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	90 81       	ld	r25, Z
  cc:	95 ff       	sbrs	r25, 5
  ce:	fd cf       	rjmp	.-6      	; 0xca <UART_transmit+0x4>
	UDR0 = data;		// 데이터 전송
  d0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  d4:	08 95       	ret

000000d6 <UART_transmit_string>:
}

void UART_transmit_string(char *str)
{
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
  da:	ec 01       	movw	r28, r24
	while(*str)		// 문자열의 끝 검사
  dc:	88 81       	ld	r24, Y
  de:	88 23       	and	r24, r24
  e0:	31 f0       	breq	.+12     	; 0xee <UART_transmit_string+0x18>
  e2:	21 96       	adiw	r28, 0x01	; 1
	{
		UART_transmit(*str);		// 문자 단위 전송
  e4:	0e 94 63 00 	call	0xc6	; 0xc6 <UART_transmit>
	UDR0 = data;		// 데이터 전송
}

void UART_transmit_string(char *str)
{
	while(*str)		// 문자열의 끝 검사
  e8:	89 91       	ld	r24, Y+
  ea:	81 11       	cpse	r24, r1
  ec:	fb cf       	rjmp	.-10     	; 0xe4 <UART_transmit_string+0xe>
	{
		UART_transmit(*str);		// 문자 단위 전송
		str++;
	}
	
	UART_transmit('\n');		// 줄바꿈 문자 추가
  ee:	8a e0       	ldi	r24, 0x0A	; 10
  f0:	0e 94 63 00 	call	0xc6	; 0xc6 <UART_transmit>
}
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <ADC_INIT>:

void ADC_INIT(void)
{
	unsigned char channel;
	ADMUX |= 0x40;		// AVCC를 기준전압으로 선택
  fa:	ac e7       	ldi	r26, 0x7C	; 124
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	8c 91       	ld	r24, X
 100:	80 64       	ori	r24, 0x40	; 64
 102:	8c 93       	st	X, r24
	
	ADCSRA |= 0x07;		// 분주비 설정 ADCSRA |= (1 << ADPS1) | (1 << ADPS0);		
 104:	ea e7       	ldi	r30, 0x7A	; 122
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	87 60       	ori	r24, 0x07	; 7
 10c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);		// ADC 활성화
 10e:	80 81       	ld	r24, Z
 110:	80 68       	ori	r24, 0x80	; 128
 112:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE);		// 자동 트리거 모드
 114:	80 81       	ld	r24, Z
 116:	80 62       	ori	r24, 0x20	; 32
 118:	80 83       	st	Z, r24
	
	ADMUX |= ((ADMUX & 0xE0) | channel);		// 채널 선택
 11a:	8c 91       	ld	r24, X
 11c:	9c 91       	ld	r25, X
 11e:	80 7e       	andi	r24, 0xE0	; 224
 120:	89 2b       	or	r24, r25
 122:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADSC);		// 변환 시작
 124:	80 81       	ld	r24, Z
 126:	80 64       	ori	r24, 0x40	; 64
 128:	80 83       	st	Z, r24
 12a:	08 95       	ret

0000012c <read_ADC>:
}

int read_ADC(unsigned char channel)
{
	while(!(ADCSRA & (1 << ADIF)));		// 변환 종료 대기
 12c:	ea e7       	ldi	r30, 0x7A	; 122
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	84 ff       	sbrs	r24, 4
 134:	fd cf       	rjmp	.-6      	; 0x130 <read_ADC+0x4>
	return ADC;		// 10비트 값을 변환	return ADCW;
 136:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 13a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
 13e:	08 95       	ret

00000140 <int_to_string>:

void int_to_string(int n, char *buffer)
{
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	eb 01       	movw	r28, r22
	sprintf(buffer, "%04d", n);		// ADC 값을 0으로 채워진 4자리 문자열로 변환
 146:	9f 93       	push	r25
 148:	8f 93       	push	r24
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	91 e0       	ldi	r25, 0x01	; 1
 14e:	9f 93       	push	r25
 150:	8f 93       	push	r24
 152:	df 93       	push	r29
 154:	6f 93       	push	r22
 156:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <sprintf>
	buffer[4] = '\0';
 15a:	1c 82       	std	Y+4, r1	; 0x04
}
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	08 95       	ret

0000016e <main>:

int main(void)
{
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	00 d0       	rcall	.+0      	; 0x174 <main+0x6>
 174:	00 d0       	rcall	.+0      	; 0x176 <main+0x8>
 176:	1f 92       	push	r1
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
    int read;
	char buffer[5];
	
	
	UART_INIT();		// UART 통신 초기화
 17c:	0e 94 4b 00 	call	0x96	; 0x96 <UART_INIT>
	ADC_INIT();		// AD 변환기 초기화
 180:	0e 94 7d 00 	call	0xfa	; 0xfa <ADC_INIT>
	
	while(1)
	{
		read = read_ADC(0);		// 가변저항 값 읽기
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	0e 94 96 00 	call	0x12c	; 0x12c <read_ADC>
		int_to_string(read, buffer);		// 정수값을 문자열로 변환
 18a:	be 01       	movw	r22, r28
 18c:	6f 5f       	subi	r22, 0xFF	; 255
 18e:	7f 4f       	sbci	r23, 0xFF	; 255
 190:	0e 94 a0 00 	call	0x140	; 0x140 <int_to_string>
		UART_transmit_string(buffer);		// 문자열을 UART로 전송
 194:	ce 01       	movw	r24, r28
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	0e 94 6b 00 	call	0xd6	; 0xd6 <UART_transmit_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19c:	2f ef       	ldi	r18, 0xFF	; 255
 19e:	83 ed       	ldi	r24, 0xD3	; 211
 1a0:	90 e3       	ldi	r25, 0x30	; 48
 1a2:	21 50       	subi	r18, 0x01	; 1
 1a4:	80 40       	sbci	r24, 0x00	; 0
 1a6:	90 40       	sbci	r25, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0x34>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x3e>
 1ac:	00 00       	nop
 1ae:	ea cf       	rjmp	.-44     	; 0x184 <main+0x16>

000001b0 <sprintf>:
 1b0:	ae e0       	ldi	r26, 0x0E	; 14
 1b2:	b0 e0       	ldi	r27, 0x00	; 0
 1b4:	ee ed       	ldi	r30, 0xDE	; 222
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	0c 94 99 03 	jmp	0x732	; 0x732 <__prologue_saves__+0x1c>
 1bc:	0d 89       	ldd	r16, Y+21	; 0x15
 1be:	1e 89       	ldd	r17, Y+22	; 0x16
 1c0:	86 e0       	ldi	r24, 0x06	; 6
 1c2:	8c 83       	std	Y+4, r24	; 0x04
 1c4:	1a 83       	std	Y+2, r17	; 0x02
 1c6:	09 83       	std	Y+1, r16	; 0x01
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	9f e7       	ldi	r25, 0x7F	; 127
 1cc:	9e 83       	std	Y+6, r25	; 0x06
 1ce:	8d 83       	std	Y+5, r24	; 0x05
 1d0:	ae 01       	movw	r20, r28
 1d2:	47 5e       	subi	r20, 0xE7	; 231
 1d4:	5f 4f       	sbci	r21, 0xFF	; 255
 1d6:	6f 89       	ldd	r22, Y+23	; 0x17
 1d8:	78 8d       	ldd	r23, Y+24	; 0x18
 1da:	ce 01       	movw	r24, r28
 1dc:	01 96       	adiw	r24, 0x01	; 1
 1de:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <vfprintf>
 1e2:	ef 81       	ldd	r30, Y+7	; 0x07
 1e4:	f8 85       	ldd	r31, Y+8	; 0x08
 1e6:	e0 0f       	add	r30, r16
 1e8:	f1 1f       	adc	r31, r17
 1ea:	10 82       	st	Z, r1
 1ec:	2e 96       	adiw	r28, 0x0e	; 14
 1ee:	e4 e0       	ldi	r30, 0x04	; 4
 1f0:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__epilogue_restores__+0x1c>

000001f4 <vfprintf>:
 1f4:	ab e0       	ldi	r26, 0x0B	; 11
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e0 e0       	ldi	r30, 0x00	; 0
 1fa:	f1 e0       	ldi	r31, 0x01	; 1
 1fc:	0c 94 8b 03 	jmp	0x716	; 0x716 <__prologue_saves__>
 200:	6c 01       	movw	r12, r24
 202:	7b 01       	movw	r14, r22
 204:	8a 01       	movw	r16, r20
 206:	fc 01       	movw	r30, r24
 208:	17 82       	std	Z+7, r1	; 0x07
 20a:	16 82       	std	Z+6, r1	; 0x06
 20c:	83 81       	ldd	r24, Z+3	; 0x03
 20e:	81 ff       	sbrs	r24, 1
 210:	cc c1       	rjmp	.+920    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 212:	ce 01       	movw	r24, r28
 214:	01 96       	adiw	r24, 0x01	; 1
 216:	3c 01       	movw	r6, r24
 218:	f6 01       	movw	r30, r12
 21a:	93 81       	ldd	r25, Z+3	; 0x03
 21c:	f7 01       	movw	r30, r14
 21e:	93 fd       	sbrc	r25, 3
 220:	85 91       	lpm	r24, Z+
 222:	93 ff       	sbrs	r25, 3
 224:	81 91       	ld	r24, Z+
 226:	7f 01       	movw	r14, r30
 228:	88 23       	and	r24, r24
 22a:	09 f4       	brne	.+2      	; 0x22e <vfprintf+0x3a>
 22c:	ba c1       	rjmp	.+884    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 22e:	85 32       	cpi	r24, 0x25	; 37
 230:	39 f4       	brne	.+14     	; 0x240 <vfprintf+0x4c>
 232:	93 fd       	sbrc	r25, 3
 234:	85 91       	lpm	r24, Z+
 236:	93 ff       	sbrs	r25, 3
 238:	81 91       	ld	r24, Z+
 23a:	7f 01       	movw	r14, r30
 23c:	85 32       	cpi	r24, 0x25	; 37
 23e:	29 f4       	brne	.+10     	; 0x24a <vfprintf+0x56>
 240:	b6 01       	movw	r22, r12
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 248:	e7 cf       	rjmp	.-50     	; 0x218 <vfprintf+0x24>
 24a:	91 2c       	mov	r9, r1
 24c:	21 2c       	mov	r2, r1
 24e:	31 2c       	mov	r3, r1
 250:	ff e1       	ldi	r31, 0x1F	; 31
 252:	f3 15       	cp	r31, r3
 254:	d8 f0       	brcs	.+54     	; 0x28c <vfprintf+0x98>
 256:	8b 32       	cpi	r24, 0x2B	; 43
 258:	79 f0       	breq	.+30     	; 0x278 <vfprintf+0x84>
 25a:	38 f4       	brcc	.+14     	; 0x26a <vfprintf+0x76>
 25c:	80 32       	cpi	r24, 0x20	; 32
 25e:	79 f0       	breq	.+30     	; 0x27e <vfprintf+0x8a>
 260:	83 32       	cpi	r24, 0x23	; 35
 262:	a1 f4       	brne	.+40     	; 0x28c <vfprintf+0x98>
 264:	23 2d       	mov	r18, r3
 266:	20 61       	ori	r18, 0x10	; 16
 268:	1d c0       	rjmp	.+58     	; 0x2a4 <vfprintf+0xb0>
 26a:	8d 32       	cpi	r24, 0x2D	; 45
 26c:	61 f0       	breq	.+24     	; 0x286 <vfprintf+0x92>
 26e:	80 33       	cpi	r24, 0x30	; 48
 270:	69 f4       	brne	.+26     	; 0x28c <vfprintf+0x98>
 272:	23 2d       	mov	r18, r3
 274:	21 60       	ori	r18, 0x01	; 1
 276:	16 c0       	rjmp	.+44     	; 0x2a4 <vfprintf+0xb0>
 278:	83 2d       	mov	r24, r3
 27a:	82 60       	ori	r24, 0x02	; 2
 27c:	38 2e       	mov	r3, r24
 27e:	e3 2d       	mov	r30, r3
 280:	e4 60       	ori	r30, 0x04	; 4
 282:	3e 2e       	mov	r3, r30
 284:	2a c0       	rjmp	.+84     	; 0x2da <vfprintf+0xe6>
 286:	f3 2d       	mov	r31, r3
 288:	f8 60       	ori	r31, 0x08	; 8
 28a:	1d c0       	rjmp	.+58     	; 0x2c6 <vfprintf+0xd2>
 28c:	37 fc       	sbrc	r3, 7
 28e:	2d c0       	rjmp	.+90     	; 0x2ea <vfprintf+0xf6>
 290:	20 ed       	ldi	r18, 0xD0	; 208
 292:	28 0f       	add	r18, r24
 294:	2a 30       	cpi	r18, 0x0A	; 10
 296:	40 f0       	brcs	.+16     	; 0x2a8 <vfprintf+0xb4>
 298:	8e 32       	cpi	r24, 0x2E	; 46
 29a:	b9 f4       	brne	.+46     	; 0x2ca <vfprintf+0xd6>
 29c:	36 fc       	sbrc	r3, 6
 29e:	81 c1       	rjmp	.+770    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 2a0:	23 2d       	mov	r18, r3
 2a2:	20 64       	ori	r18, 0x40	; 64
 2a4:	32 2e       	mov	r3, r18
 2a6:	19 c0       	rjmp	.+50     	; 0x2da <vfprintf+0xe6>
 2a8:	36 fe       	sbrs	r3, 6
 2aa:	06 c0       	rjmp	.+12     	; 0x2b8 <vfprintf+0xc4>
 2ac:	8a e0       	ldi	r24, 0x0A	; 10
 2ae:	98 9e       	mul	r9, r24
 2b0:	20 0d       	add	r18, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	92 2e       	mov	r9, r18
 2b6:	11 c0       	rjmp	.+34     	; 0x2da <vfprintf+0xe6>
 2b8:	ea e0       	ldi	r30, 0x0A	; 10
 2ba:	2e 9e       	mul	r2, r30
 2bc:	20 0d       	add	r18, r0
 2be:	11 24       	eor	r1, r1
 2c0:	22 2e       	mov	r2, r18
 2c2:	f3 2d       	mov	r31, r3
 2c4:	f0 62       	ori	r31, 0x20	; 32
 2c6:	3f 2e       	mov	r3, r31
 2c8:	08 c0       	rjmp	.+16     	; 0x2da <vfprintf+0xe6>
 2ca:	8c 36       	cpi	r24, 0x6C	; 108
 2cc:	21 f4       	brne	.+8      	; 0x2d6 <vfprintf+0xe2>
 2ce:	83 2d       	mov	r24, r3
 2d0:	80 68       	ori	r24, 0x80	; 128
 2d2:	38 2e       	mov	r3, r24
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <vfprintf+0xe6>
 2d6:	88 36       	cpi	r24, 0x68	; 104
 2d8:	41 f4       	brne	.+16     	; 0x2ea <vfprintf+0xf6>
 2da:	f7 01       	movw	r30, r14
 2dc:	93 fd       	sbrc	r25, 3
 2de:	85 91       	lpm	r24, Z+
 2e0:	93 ff       	sbrs	r25, 3
 2e2:	81 91       	ld	r24, Z+
 2e4:	7f 01       	movw	r14, r30
 2e6:	81 11       	cpse	r24, r1
 2e8:	b3 cf       	rjmp	.-154    	; 0x250 <vfprintf+0x5c>
 2ea:	98 2f       	mov	r25, r24
 2ec:	9f 7d       	andi	r25, 0xDF	; 223
 2ee:	95 54       	subi	r25, 0x45	; 69
 2f0:	93 30       	cpi	r25, 0x03	; 3
 2f2:	28 f4       	brcc	.+10     	; 0x2fe <vfprintf+0x10a>
 2f4:	0c 5f       	subi	r16, 0xFC	; 252
 2f6:	1f 4f       	sbci	r17, 0xFF	; 255
 2f8:	9f e3       	ldi	r25, 0x3F	; 63
 2fa:	99 83       	std	Y+1, r25	; 0x01
 2fc:	0d c0       	rjmp	.+26     	; 0x318 <vfprintf+0x124>
 2fe:	83 36       	cpi	r24, 0x63	; 99
 300:	31 f0       	breq	.+12     	; 0x30e <vfprintf+0x11a>
 302:	83 37       	cpi	r24, 0x73	; 115
 304:	71 f0       	breq	.+28     	; 0x322 <vfprintf+0x12e>
 306:	83 35       	cpi	r24, 0x53	; 83
 308:	09 f0       	breq	.+2      	; 0x30c <vfprintf+0x118>
 30a:	59 c0       	rjmp	.+178    	; 0x3be <vfprintf+0x1ca>
 30c:	21 c0       	rjmp	.+66     	; 0x350 <vfprintf+0x15c>
 30e:	f8 01       	movw	r30, r16
 310:	80 81       	ld	r24, Z
 312:	89 83       	std	Y+1, r24	; 0x01
 314:	0e 5f       	subi	r16, 0xFE	; 254
 316:	1f 4f       	sbci	r17, 0xFF	; 255
 318:	88 24       	eor	r8, r8
 31a:	83 94       	inc	r8
 31c:	91 2c       	mov	r9, r1
 31e:	53 01       	movw	r10, r6
 320:	13 c0       	rjmp	.+38     	; 0x348 <vfprintf+0x154>
 322:	28 01       	movw	r4, r16
 324:	f2 e0       	ldi	r31, 0x02	; 2
 326:	4f 0e       	add	r4, r31
 328:	51 1c       	adc	r5, r1
 32a:	f8 01       	movw	r30, r16
 32c:	a0 80       	ld	r10, Z
 32e:	b1 80       	ldd	r11, Z+1	; 0x01
 330:	36 fe       	sbrs	r3, 6
 332:	03 c0       	rjmp	.+6      	; 0x33a <vfprintf+0x146>
 334:	69 2d       	mov	r22, r9
 336:	70 e0       	ldi	r23, 0x00	; 0
 338:	02 c0       	rjmp	.+4      	; 0x33e <vfprintf+0x14a>
 33a:	6f ef       	ldi	r22, 0xFF	; 255
 33c:	7f ef       	ldi	r23, 0xFF	; 255
 33e:	c5 01       	movw	r24, r10
 340:	0e 94 e6 02 	call	0x5cc	; 0x5cc <strnlen>
 344:	4c 01       	movw	r8, r24
 346:	82 01       	movw	r16, r4
 348:	f3 2d       	mov	r31, r3
 34a:	ff 77       	andi	r31, 0x7F	; 127
 34c:	3f 2e       	mov	r3, r31
 34e:	16 c0       	rjmp	.+44     	; 0x37c <vfprintf+0x188>
 350:	28 01       	movw	r4, r16
 352:	22 e0       	ldi	r18, 0x02	; 2
 354:	42 0e       	add	r4, r18
 356:	51 1c       	adc	r5, r1
 358:	f8 01       	movw	r30, r16
 35a:	a0 80       	ld	r10, Z
 35c:	b1 80       	ldd	r11, Z+1	; 0x01
 35e:	36 fe       	sbrs	r3, 6
 360:	03 c0       	rjmp	.+6      	; 0x368 <vfprintf+0x174>
 362:	69 2d       	mov	r22, r9
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	02 c0       	rjmp	.+4      	; 0x36c <vfprintf+0x178>
 368:	6f ef       	ldi	r22, 0xFF	; 255
 36a:	7f ef       	ldi	r23, 0xFF	; 255
 36c:	c5 01       	movw	r24, r10
 36e:	0e 94 db 02 	call	0x5b6	; 0x5b6 <strnlen_P>
 372:	4c 01       	movw	r8, r24
 374:	f3 2d       	mov	r31, r3
 376:	f0 68       	ori	r31, 0x80	; 128
 378:	3f 2e       	mov	r3, r31
 37a:	82 01       	movw	r16, r4
 37c:	33 fc       	sbrc	r3, 3
 37e:	1b c0       	rjmp	.+54     	; 0x3b6 <vfprintf+0x1c2>
 380:	82 2d       	mov	r24, r2
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	88 16       	cp	r8, r24
 386:	99 06       	cpc	r9, r25
 388:	b0 f4       	brcc	.+44     	; 0x3b6 <vfprintf+0x1c2>
 38a:	b6 01       	movw	r22, r12
 38c:	80 e2       	ldi	r24, 0x20	; 32
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 394:	2a 94       	dec	r2
 396:	f4 cf       	rjmp	.-24     	; 0x380 <vfprintf+0x18c>
 398:	f5 01       	movw	r30, r10
 39a:	37 fc       	sbrc	r3, 7
 39c:	85 91       	lpm	r24, Z+
 39e:	37 fe       	sbrs	r3, 7
 3a0:	81 91       	ld	r24, Z+
 3a2:	5f 01       	movw	r10, r30
 3a4:	b6 01       	movw	r22, r12
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 3ac:	21 10       	cpse	r2, r1
 3ae:	2a 94       	dec	r2
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	82 1a       	sub	r8, r18
 3b4:	91 08       	sbc	r9, r1
 3b6:	81 14       	cp	r8, r1
 3b8:	91 04       	cpc	r9, r1
 3ba:	71 f7       	brne	.-36     	; 0x398 <vfprintf+0x1a4>
 3bc:	e8 c0       	rjmp	.+464    	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 3be:	84 36       	cpi	r24, 0x64	; 100
 3c0:	11 f0       	breq	.+4      	; 0x3c6 <vfprintf+0x1d2>
 3c2:	89 36       	cpi	r24, 0x69	; 105
 3c4:	41 f5       	brne	.+80     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3c6:	f8 01       	movw	r30, r16
 3c8:	37 fe       	sbrs	r3, 7
 3ca:	07 c0       	rjmp	.+14     	; 0x3da <vfprintf+0x1e6>
 3cc:	60 81       	ld	r22, Z
 3ce:	71 81       	ldd	r23, Z+1	; 0x01
 3d0:	82 81       	ldd	r24, Z+2	; 0x02
 3d2:	93 81       	ldd	r25, Z+3	; 0x03
 3d4:	0c 5f       	subi	r16, 0xFC	; 252
 3d6:	1f 4f       	sbci	r17, 0xFF	; 255
 3d8:	08 c0       	rjmp	.+16     	; 0x3ea <vfprintf+0x1f6>
 3da:	60 81       	ld	r22, Z
 3dc:	71 81       	ldd	r23, Z+1	; 0x01
 3de:	07 2e       	mov	r0, r23
 3e0:	00 0c       	add	r0, r0
 3e2:	88 0b       	sbc	r24, r24
 3e4:	99 0b       	sbc	r25, r25
 3e6:	0e 5f       	subi	r16, 0xFE	; 254
 3e8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ea:	f3 2d       	mov	r31, r3
 3ec:	ff 76       	andi	r31, 0x6F	; 111
 3ee:	3f 2e       	mov	r3, r31
 3f0:	97 ff       	sbrs	r25, 7
 3f2:	09 c0       	rjmp	.+18     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f4:	90 95       	com	r25
 3f6:	80 95       	com	r24
 3f8:	70 95       	com	r23
 3fa:	61 95       	neg	r22
 3fc:	7f 4f       	sbci	r23, 0xFF	; 255
 3fe:	8f 4f       	sbci	r24, 0xFF	; 255
 400:	9f 4f       	sbci	r25, 0xFF	; 255
 402:	f0 68       	ori	r31, 0x80	; 128
 404:	3f 2e       	mov	r3, r31
 406:	2a e0       	ldi	r18, 0x0A	; 10
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	a3 01       	movw	r20, r6
 40c:	0e 94 2d 03 	call	0x65a	; 0x65a <__ultoa_invert>
 410:	88 2e       	mov	r8, r24
 412:	86 18       	sub	r8, r6
 414:	45 c0       	rjmp	.+138    	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 416:	85 37       	cpi	r24, 0x75	; 117
 418:	31 f4       	brne	.+12     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41a:	23 2d       	mov	r18, r3
 41c:	2f 7e       	andi	r18, 0xEF	; 239
 41e:	b2 2e       	mov	r11, r18
 420:	2a e0       	ldi	r18, 0x0A	; 10
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	25 c0       	rjmp	.+74     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 426:	93 2d       	mov	r25, r3
 428:	99 7f       	andi	r25, 0xF9	; 249
 42a:	b9 2e       	mov	r11, r25
 42c:	8f 36       	cpi	r24, 0x6F	; 111
 42e:	c1 f0       	breq	.+48     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 430:	18 f4       	brcc	.+6      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 432:	88 35       	cpi	r24, 0x58	; 88
 434:	79 f0       	breq	.+30     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 436:	b5 c0       	rjmp	.+362    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 438:	80 37       	cpi	r24, 0x70	; 112
 43a:	19 f0       	breq	.+6      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43c:	88 37       	cpi	r24, 0x78	; 120
 43e:	21 f0       	breq	.+8      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 440:	b0 c0       	rjmp	.+352    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 442:	e9 2f       	mov	r30, r25
 444:	e0 61       	ori	r30, 0x10	; 16
 446:	be 2e       	mov	r11, r30
 448:	b4 fe       	sbrs	r11, 4
 44a:	0d c0       	rjmp	.+26     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 44c:	fb 2d       	mov	r31, r11
 44e:	f4 60       	ori	r31, 0x04	; 4
 450:	bf 2e       	mov	r11, r31
 452:	09 c0       	rjmp	.+18     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 454:	34 fe       	sbrs	r3, 4
 456:	0a c0       	rjmp	.+20     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 458:	29 2f       	mov	r18, r25
 45a:	26 60       	ori	r18, 0x06	; 6
 45c:	b2 2e       	mov	r11, r18
 45e:	06 c0       	rjmp	.+12     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 460:	28 e0       	ldi	r18, 0x08	; 8
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	05 c0       	rjmp	.+10     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 466:	20 e1       	ldi	r18, 0x10	; 16
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	02 c0       	rjmp	.+4      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46c:	20 e1       	ldi	r18, 0x10	; 16
 46e:	32 e0       	ldi	r19, 0x02	; 2
 470:	f8 01       	movw	r30, r16
 472:	b7 fe       	sbrs	r11, 7
 474:	07 c0       	rjmp	.+14     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 476:	60 81       	ld	r22, Z
 478:	71 81       	ldd	r23, Z+1	; 0x01
 47a:	82 81       	ldd	r24, Z+2	; 0x02
 47c:	93 81       	ldd	r25, Z+3	; 0x03
 47e:	0c 5f       	subi	r16, 0xFC	; 252
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	06 c0       	rjmp	.+12     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 484:	60 81       	ld	r22, Z
 486:	71 81       	ldd	r23, Z+1	; 0x01
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	0e 5f       	subi	r16, 0xFE	; 254
 48e:	1f 4f       	sbci	r17, 0xFF	; 255
 490:	a3 01       	movw	r20, r6
 492:	0e 94 2d 03 	call	0x65a	; 0x65a <__ultoa_invert>
 496:	88 2e       	mov	r8, r24
 498:	86 18       	sub	r8, r6
 49a:	fb 2d       	mov	r31, r11
 49c:	ff 77       	andi	r31, 0x7F	; 127
 49e:	3f 2e       	mov	r3, r31
 4a0:	36 fe       	sbrs	r3, 6
 4a2:	0d c0       	rjmp	.+26     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4a4:	23 2d       	mov	r18, r3
 4a6:	2e 7f       	andi	r18, 0xFE	; 254
 4a8:	a2 2e       	mov	r10, r18
 4aa:	89 14       	cp	r8, r9
 4ac:	58 f4       	brcc	.+22     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4ae:	34 fe       	sbrs	r3, 4
 4b0:	0b c0       	rjmp	.+22     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b2:	32 fc       	sbrc	r3, 2
 4b4:	09 c0       	rjmp	.+18     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b6:	83 2d       	mov	r24, r3
 4b8:	8e 7e       	andi	r24, 0xEE	; 238
 4ba:	a8 2e       	mov	r10, r24
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4be:	b8 2c       	mov	r11, r8
 4c0:	a3 2c       	mov	r10, r3
 4c2:	03 c0       	rjmp	.+6      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c4:	b8 2c       	mov	r11, r8
 4c6:	01 c0       	rjmp	.+2      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c8:	b9 2c       	mov	r11, r9
 4ca:	a4 fe       	sbrs	r10, 4
 4cc:	0f c0       	rjmp	.+30     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4ce:	fe 01       	movw	r30, r28
 4d0:	e8 0d       	add	r30, r8
 4d2:	f1 1d       	adc	r31, r1
 4d4:	80 81       	ld	r24, Z
 4d6:	80 33       	cpi	r24, 0x30	; 48
 4d8:	21 f4       	brne	.+8      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4da:	9a 2d       	mov	r25, r10
 4dc:	99 7e       	andi	r25, 0xE9	; 233
 4de:	a9 2e       	mov	r10, r25
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e2:	a2 fe       	sbrs	r10, 2
 4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e6:	b3 94       	inc	r11
 4e8:	b3 94       	inc	r11
 4ea:	04 c0       	rjmp	.+8      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ec:	8a 2d       	mov	r24, r10
 4ee:	86 78       	andi	r24, 0x86	; 134
 4f0:	09 f0       	breq	.+2      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4f2:	b3 94       	inc	r11
 4f4:	a3 fc       	sbrc	r10, 3
 4f6:	11 c0       	rjmp	.+34     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4f8:	a0 fe       	sbrs	r10, 0
 4fa:	06 c0       	rjmp	.+12     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4fc:	b2 14       	cp	r11, r2
 4fe:	88 f4       	brcc	.+34     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 500:	28 0c       	add	r2, r8
 502:	92 2c       	mov	r9, r2
 504:	9b 18       	sub	r9, r11
 506:	0e c0       	rjmp	.+28     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 508:	b2 14       	cp	r11, r2
 50a:	60 f4       	brcc	.+24     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 50c:	b6 01       	movw	r22, r12
 50e:	80 e2       	ldi	r24, 0x20	; 32
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 516:	b3 94       	inc	r11
 518:	f7 cf       	rjmp	.-18     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 51a:	b2 14       	cp	r11, r2
 51c:	18 f4       	brcc	.+6      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 51e:	2b 18       	sub	r2, r11
 520:	02 c0       	rjmp	.+4      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 522:	98 2c       	mov	r9, r8
 524:	21 2c       	mov	r2, r1
 526:	a4 fe       	sbrs	r10, 4
 528:	10 c0       	rjmp	.+32     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 52a:	b6 01       	movw	r22, r12
 52c:	80 e3       	ldi	r24, 0x30	; 48
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 534:	a2 fe       	sbrs	r10, 2
 536:	17 c0       	rjmp	.+46     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 538:	a1 fc       	sbrc	r10, 1
 53a:	03 c0       	rjmp	.+6      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53c:	88 e7       	ldi	r24, 0x78	; 120
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	02 c0       	rjmp	.+4      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 542:	88 e5       	ldi	r24, 0x58	; 88
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	b6 01       	movw	r22, r12
 548:	0c c0       	rjmp	.+24     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 54a:	8a 2d       	mov	r24, r10
 54c:	86 78       	andi	r24, 0x86	; 134
 54e:	59 f0       	breq	.+22     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 550:	a1 fe       	sbrs	r10, 1
 552:	02 c0       	rjmp	.+4      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 554:	8b e2       	ldi	r24, 0x2B	; 43
 556:	01 c0       	rjmp	.+2      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 558:	80 e2       	ldi	r24, 0x20	; 32
 55a:	a7 fc       	sbrc	r10, 7
 55c:	8d e2       	ldi	r24, 0x2D	; 45
 55e:	b6 01       	movw	r22, r12
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 566:	89 14       	cp	r8, r9
 568:	38 f4       	brcc	.+14     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56a:	b6 01       	movw	r22, r12
 56c:	80 e3       	ldi	r24, 0x30	; 48
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 574:	9a 94       	dec	r9
 576:	f7 cf       	rjmp	.-18     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 578:	8a 94       	dec	r8
 57a:	f3 01       	movw	r30, r6
 57c:	e8 0d       	add	r30, r8
 57e:	f1 1d       	adc	r31, r1
 580:	80 81       	ld	r24, Z
 582:	b6 01       	movw	r22, r12
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 58a:	81 10       	cpse	r8, r1
 58c:	f5 cf       	rjmp	.-22     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 58e:	22 20       	and	r2, r2
 590:	09 f4       	brne	.+2      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 592:	42 ce       	rjmp	.-892    	; 0x218 <vfprintf+0x24>
 594:	b6 01       	movw	r22, r12
 596:	80 e2       	ldi	r24, 0x20	; 32
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 59e:	2a 94       	dec	r2
 5a0:	f6 cf       	rjmp	.-20     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 5a2:	f6 01       	movw	r30, r12
 5a4:	86 81       	ldd	r24, Z+6	; 0x06
 5a6:	97 81       	ldd	r25, Z+7	; 0x07
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5aa:	8f ef       	ldi	r24, 0xFF	; 255
 5ac:	9f ef       	ldi	r25, 0xFF	; 255
 5ae:	2b 96       	adiw	r28, 0x0b	; 11
 5b0:	e2 e1       	ldi	r30, 0x12	; 18
 5b2:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__epilogue_restores__>

000005b6 <strnlen_P>:
 5b6:	fc 01       	movw	r30, r24
 5b8:	05 90       	lpm	r0, Z+
 5ba:	61 50       	subi	r22, 0x01	; 1
 5bc:	70 40       	sbci	r23, 0x00	; 0
 5be:	01 10       	cpse	r0, r1
 5c0:	d8 f7       	brcc	.-10     	; 0x5b8 <strnlen_P+0x2>
 5c2:	80 95       	com	r24
 5c4:	90 95       	com	r25
 5c6:	8e 0f       	add	r24, r30
 5c8:	9f 1f       	adc	r25, r31
 5ca:	08 95       	ret

000005cc <strnlen>:
 5cc:	fc 01       	movw	r30, r24
 5ce:	61 50       	subi	r22, 0x01	; 1
 5d0:	70 40       	sbci	r23, 0x00	; 0
 5d2:	01 90       	ld	r0, Z+
 5d4:	01 10       	cpse	r0, r1
 5d6:	d8 f7       	brcc	.-10     	; 0x5ce <strnlen+0x2>
 5d8:	80 95       	com	r24
 5da:	90 95       	com	r25
 5dc:	8e 0f       	add	r24, r30
 5de:	9f 1f       	adc	r25, r31
 5e0:	08 95       	ret

000005e2 <fputc>:
 5e2:	0f 93       	push	r16
 5e4:	1f 93       	push	r17
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	fb 01       	movw	r30, r22
 5ec:	23 81       	ldd	r18, Z+3	; 0x03
 5ee:	21 fd       	sbrc	r18, 1
 5f0:	03 c0       	rjmp	.+6      	; 0x5f8 <fputc+0x16>
 5f2:	8f ef       	ldi	r24, 0xFF	; 255
 5f4:	9f ef       	ldi	r25, 0xFF	; 255
 5f6:	2c c0       	rjmp	.+88     	; 0x650 <fputc+0x6e>
 5f8:	22 ff       	sbrs	r18, 2
 5fa:	16 c0       	rjmp	.+44     	; 0x628 <fputc+0x46>
 5fc:	46 81       	ldd	r20, Z+6	; 0x06
 5fe:	57 81       	ldd	r21, Z+7	; 0x07
 600:	24 81       	ldd	r18, Z+4	; 0x04
 602:	35 81       	ldd	r19, Z+5	; 0x05
 604:	42 17       	cp	r20, r18
 606:	53 07       	cpc	r21, r19
 608:	44 f4       	brge	.+16     	; 0x61a <fputc+0x38>
 60a:	a0 81       	ld	r26, Z
 60c:	b1 81       	ldd	r27, Z+1	; 0x01
 60e:	9d 01       	movw	r18, r26
 610:	2f 5f       	subi	r18, 0xFF	; 255
 612:	3f 4f       	sbci	r19, 0xFF	; 255
 614:	31 83       	std	Z+1, r19	; 0x01
 616:	20 83       	st	Z, r18
 618:	8c 93       	st	X, r24
 61a:	26 81       	ldd	r18, Z+6	; 0x06
 61c:	37 81       	ldd	r19, Z+7	; 0x07
 61e:	2f 5f       	subi	r18, 0xFF	; 255
 620:	3f 4f       	sbci	r19, 0xFF	; 255
 622:	37 83       	std	Z+7, r19	; 0x07
 624:	26 83       	std	Z+6, r18	; 0x06
 626:	14 c0       	rjmp	.+40     	; 0x650 <fputc+0x6e>
 628:	8b 01       	movw	r16, r22
 62a:	ec 01       	movw	r28, r24
 62c:	fb 01       	movw	r30, r22
 62e:	00 84       	ldd	r0, Z+8	; 0x08
 630:	f1 85       	ldd	r31, Z+9	; 0x09
 632:	e0 2d       	mov	r30, r0
 634:	09 95       	icall
 636:	89 2b       	or	r24, r25
 638:	e1 f6       	brne	.-72     	; 0x5f2 <fputc+0x10>
 63a:	d8 01       	movw	r26, r16
 63c:	16 96       	adiw	r26, 0x06	; 6
 63e:	8d 91       	ld	r24, X+
 640:	9c 91       	ld	r25, X
 642:	17 97       	sbiw	r26, 0x07	; 7
 644:	01 96       	adiw	r24, 0x01	; 1
 646:	17 96       	adiw	r26, 0x07	; 7
 648:	9c 93       	st	X, r25
 64a:	8e 93       	st	-X, r24
 64c:	16 97       	sbiw	r26, 0x06	; 6
 64e:	ce 01       	movw	r24, r28
 650:	df 91       	pop	r29
 652:	cf 91       	pop	r28
 654:	1f 91       	pop	r17
 656:	0f 91       	pop	r16
 658:	08 95       	ret

0000065a <__ultoa_invert>:
 65a:	fa 01       	movw	r30, r20
 65c:	aa 27       	eor	r26, r26
 65e:	28 30       	cpi	r18, 0x08	; 8
 660:	51 f1       	breq	.+84     	; 0x6b6 <__ultoa_invert+0x5c>
 662:	20 31       	cpi	r18, 0x10	; 16
 664:	81 f1       	breq	.+96     	; 0x6c6 <__ultoa_invert+0x6c>
 666:	e8 94       	clt
 668:	6f 93       	push	r22
 66a:	6e 7f       	andi	r22, 0xFE	; 254
 66c:	6e 5f       	subi	r22, 0xFE	; 254
 66e:	7f 4f       	sbci	r23, 0xFF	; 255
 670:	8f 4f       	sbci	r24, 0xFF	; 255
 672:	9f 4f       	sbci	r25, 0xFF	; 255
 674:	af 4f       	sbci	r26, 0xFF	; 255
 676:	b1 e0       	ldi	r27, 0x01	; 1
 678:	3e d0       	rcall	.+124    	; 0x6f6 <__ultoa_invert+0x9c>
 67a:	b4 e0       	ldi	r27, 0x04	; 4
 67c:	3c d0       	rcall	.+120    	; 0x6f6 <__ultoa_invert+0x9c>
 67e:	67 0f       	add	r22, r23
 680:	78 1f       	adc	r23, r24
 682:	89 1f       	adc	r24, r25
 684:	9a 1f       	adc	r25, r26
 686:	a1 1d       	adc	r26, r1
 688:	68 0f       	add	r22, r24
 68a:	79 1f       	adc	r23, r25
 68c:	8a 1f       	adc	r24, r26
 68e:	91 1d       	adc	r25, r1
 690:	a1 1d       	adc	r26, r1
 692:	6a 0f       	add	r22, r26
 694:	71 1d       	adc	r23, r1
 696:	81 1d       	adc	r24, r1
 698:	91 1d       	adc	r25, r1
 69a:	a1 1d       	adc	r26, r1
 69c:	20 d0       	rcall	.+64     	; 0x6de <__ultoa_invert+0x84>
 69e:	09 f4       	brne	.+2      	; 0x6a2 <__ultoa_invert+0x48>
 6a0:	68 94       	set
 6a2:	3f 91       	pop	r19
 6a4:	2a e0       	ldi	r18, 0x0A	; 10
 6a6:	26 9f       	mul	r18, r22
 6a8:	11 24       	eor	r1, r1
 6aa:	30 19       	sub	r19, r0
 6ac:	30 5d       	subi	r19, 0xD0	; 208
 6ae:	31 93       	st	Z+, r19
 6b0:	de f6       	brtc	.-74     	; 0x668 <__ultoa_invert+0xe>
 6b2:	cf 01       	movw	r24, r30
 6b4:	08 95       	ret
 6b6:	46 2f       	mov	r20, r22
 6b8:	47 70       	andi	r20, 0x07	; 7
 6ba:	40 5d       	subi	r20, 0xD0	; 208
 6bc:	41 93       	st	Z+, r20
 6be:	b3 e0       	ldi	r27, 0x03	; 3
 6c0:	0f d0       	rcall	.+30     	; 0x6e0 <__ultoa_invert+0x86>
 6c2:	c9 f7       	brne	.-14     	; 0x6b6 <__ultoa_invert+0x5c>
 6c4:	f6 cf       	rjmp	.-20     	; 0x6b2 <__ultoa_invert+0x58>
 6c6:	46 2f       	mov	r20, r22
 6c8:	4f 70       	andi	r20, 0x0F	; 15
 6ca:	40 5d       	subi	r20, 0xD0	; 208
 6cc:	4a 33       	cpi	r20, 0x3A	; 58
 6ce:	18 f0       	brcs	.+6      	; 0x6d6 <__ultoa_invert+0x7c>
 6d0:	49 5d       	subi	r20, 0xD9	; 217
 6d2:	31 fd       	sbrc	r19, 1
 6d4:	40 52       	subi	r20, 0x20	; 32
 6d6:	41 93       	st	Z+, r20
 6d8:	02 d0       	rcall	.+4      	; 0x6de <__ultoa_invert+0x84>
 6da:	a9 f7       	brne	.-22     	; 0x6c6 <__ultoa_invert+0x6c>
 6dc:	ea cf       	rjmp	.-44     	; 0x6b2 <__ultoa_invert+0x58>
 6de:	b4 e0       	ldi	r27, 0x04	; 4
 6e0:	a6 95       	lsr	r26
 6e2:	97 95       	ror	r25
 6e4:	87 95       	ror	r24
 6e6:	77 95       	ror	r23
 6e8:	67 95       	ror	r22
 6ea:	ba 95       	dec	r27
 6ec:	c9 f7       	brne	.-14     	; 0x6e0 <__ultoa_invert+0x86>
 6ee:	00 97       	sbiw	r24, 0x00	; 0
 6f0:	61 05       	cpc	r22, r1
 6f2:	71 05       	cpc	r23, r1
 6f4:	08 95       	ret
 6f6:	9b 01       	movw	r18, r22
 6f8:	ac 01       	movw	r20, r24
 6fa:	0a 2e       	mov	r0, r26
 6fc:	06 94       	lsr	r0
 6fe:	57 95       	ror	r21
 700:	47 95       	ror	r20
 702:	37 95       	ror	r19
 704:	27 95       	ror	r18
 706:	ba 95       	dec	r27
 708:	c9 f7       	brne	.-14     	; 0x6fc <__ultoa_invert+0xa2>
 70a:	62 0f       	add	r22, r18
 70c:	73 1f       	adc	r23, r19
 70e:	84 1f       	adc	r24, r20
 710:	95 1f       	adc	r25, r21
 712:	a0 1d       	adc	r26, r0
 714:	08 95       	ret

00000716 <__prologue_saves__>:
 716:	2f 92       	push	r2
 718:	3f 92       	push	r3
 71a:	4f 92       	push	r4
 71c:	5f 92       	push	r5
 71e:	6f 92       	push	r6
 720:	7f 92       	push	r7
 722:	8f 92       	push	r8
 724:	9f 92       	push	r9
 726:	af 92       	push	r10
 728:	bf 92       	push	r11
 72a:	cf 92       	push	r12
 72c:	df 92       	push	r13
 72e:	ef 92       	push	r14
 730:	ff 92       	push	r15
 732:	0f 93       	push	r16
 734:	1f 93       	push	r17
 736:	cf 93       	push	r28
 738:	df 93       	push	r29
 73a:	cd b7       	in	r28, 0x3d	; 61
 73c:	de b7       	in	r29, 0x3e	; 62
 73e:	ca 1b       	sub	r28, r26
 740:	db 0b       	sbc	r29, r27
 742:	0f b6       	in	r0, 0x3f	; 63
 744:	f8 94       	cli
 746:	de bf       	out	0x3e, r29	; 62
 748:	0f be       	out	0x3f, r0	; 63
 74a:	cd bf       	out	0x3d, r28	; 61
 74c:	09 94       	ijmp

0000074e <__epilogue_restores__>:
 74e:	2a 88       	ldd	r2, Y+18	; 0x12
 750:	39 88       	ldd	r3, Y+17	; 0x11
 752:	48 88       	ldd	r4, Y+16	; 0x10
 754:	5f 84       	ldd	r5, Y+15	; 0x0f
 756:	6e 84       	ldd	r6, Y+14	; 0x0e
 758:	7d 84       	ldd	r7, Y+13	; 0x0d
 75a:	8c 84       	ldd	r8, Y+12	; 0x0c
 75c:	9b 84       	ldd	r9, Y+11	; 0x0b
 75e:	aa 84       	ldd	r10, Y+10	; 0x0a
 760:	b9 84       	ldd	r11, Y+9	; 0x09
 762:	c8 84       	ldd	r12, Y+8	; 0x08
 764:	df 80       	ldd	r13, Y+7	; 0x07
 766:	ee 80       	ldd	r14, Y+6	; 0x06
 768:	fd 80       	ldd	r15, Y+5	; 0x05
 76a:	0c 81       	ldd	r16, Y+4	; 0x04
 76c:	1b 81       	ldd	r17, Y+3	; 0x03
 76e:	aa 81       	ldd	r26, Y+2	; 0x02
 770:	b9 81       	ldd	r27, Y+1	; 0x01
 772:	ce 0f       	add	r28, r30
 774:	d1 1d       	adc	r29, r1
 776:	0f b6       	in	r0, 0x3f	; 63
 778:	f8 94       	cli
 77a:	de bf       	out	0x3e, r29	; 62
 77c:	0f be       	out	0x3f, r0	; 63
 77e:	cd bf       	out	0x3d, r28	; 61
 780:	ed 01       	movw	r28, r26
 782:	08 95       	ret

00000784 <_exit>:
 784:	f8 94       	cli

00000786 <__stop_program>:
 786:	ff cf       	rjmp	.-2      	; 0x786 <__stop_program>
